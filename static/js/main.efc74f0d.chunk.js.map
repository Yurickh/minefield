{"version":3,"sources":["components/title.js","components/cell.js","mines/coordinates.js","mines/cells-around.js","utils/random.js","mines/populate.js","utils/random-until.js","context/app.js","hooks/useGrid.js","hooks/useEffectOnFirstRender.js","components/grid.js","app.js","index.js"],"names":["Title","Object","styled_base_browser_esm","target","name","styles","Button","_ref","visible","_ref2","children","concat","React","memo","_ref3","fn","cell","selectCell","markCell","react_default","a","createElement","onClick","onContextMenu","event","preventDefault","marked","isMine","minesAround","getSymbolFor","coordinatesFromIndex","numCols","index","col","row","Math","floor","indexFromCoordinates","c","f1","f2","apply","arguments","cellsAround","numRows","up","pos","objectSpread","down","left","right","fromIndex","outOfBounds","max","map","move","filter","random","to","from","length","undefined","emptyCell","getRandomMinePositions","range","mines","randomizeMine","forbidden","numMines","newMinePosition","rand","includes","randomUntil","toConsumableArray","AppContext","createContext","Error","useGrid","stats","_useContext","useContext","onBomb","locked","_useState","useState","_useState2","slicedToArray","grid","setGrid","findCellsAround","toIndex","callback","dependencies","mounted","setMounted","useEffect","useEffectOnFirstRender","cells","Array","fill","getCellsAround","minePositions","cellsWithMines","cellsWithMinesAndNumbers","cellIndex","_","slice","populate","setCell","partial","minefield","produce","draft","visited","useRef","Set","forEach","current","has","add","Row","Container","Grid","_useGrid","_useGrid2","_useGrid2$","numberOfFlags","reduce","amount","column","flags","rowIndex","key","colIndex","components_cell","defaultProps","Main","App","tries","setTries","_useState3","_useState4","finished","setFinished","restart","useCallback","context","useMemo","app","Provider","value","title","app_Button","ReactDOM","render","src_app","document","getElementById"],"mappings":"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","file":"static/js/main.efc74f0d.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro'\n\nconst Title = styled.h1`\n  font-size: 2.5em;\n`\n\nexport default Title\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\n\nfunction getColorFor(number) {\n  const colors = [\n    'blue',\n    'green',\n    'red',\n    'dark-blue',\n    'brown',\n    'cyan',\n    'black',\n    'gray',\n  ]\n\n  return colors[number - 1]\n}\n\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.5em;\n  height: 2em;\n  width: 2em;\n  padding: 0.2em;\n\n  font-family: sans-serif;\n  font-weight: bold;\n  border: none;\n\n  ${({ visible }) =>\n    !visible &&\n    `\n    border: 0.3em outset #686868;\n    border-top-color: #aeaeae;\n  `}\n\n  ${({ children }) =>\n    children !== 'ðŸ’£ ' &&\n    `color: ${getColorFor(children)};`}\n\n  background-color: #b2b2b2;\n\n  cursor: pointer;\n  box-sizing: border-box;\n  user-select: none;\n\n  :active {\n    border: none;\n    padding: 0.481em; /* visual compensation */\n  }\n`\n\nfunction getSymbolFor(cell) {\n  if (cell.marked) return 'ðŸš© '\n  if (!cell.visible) return ''\n  if (cell.isMine) return 'ðŸ’£ '\n\n  return cell.minesAround || ''\n}\n\nfunction preventDefault(fn) {\n  return event => {\n    event.preventDefault()\n    fn()\n  }\n}\n\nfunction Cell({ cell, selectCell, markCell }) {\n  return (\n    <Button\n      visible={cell.visible}\n      onClick={selectCell}\n      onContextMenu={preventDefault(markCell)}\n    >\n      {getSymbolFor(cell)}\n    </Button>\n  )\n}\n\nexport default React.memo(Cell)\n","export function coordinatesFromIndex({ numCols }) {\n  return index => ({\n    col: index % numCols,\n    row: Math.floor(index / numCols),\n  })\n}\n\nexport function indexFromCoordinates({ numCols }) {\n  return ({ col, row }) => row * numCols + col\n}\n","import { coordinatesFromIndex, indexFromCoordinates } from './coordinates'\n\nconst c = (f1, f2) => (...params) => f1(f2(...params))\n\nexport default function cellsAround({ numCols, numRows }) {\n  const up = pos => ({ ...pos, row: pos.row - 1 })\n  const down = pos => ({ ...pos, row: pos.row + 1 })\n  const left = pos => ({ ...pos, col: pos.col - 1 })\n  const right = pos => ({ ...pos, col: pos.col + 1 })\n  const fromIndex = coordinatesFromIndex({ numCols })\n\n  const outOfBounds = (max, index) => index < 0 || index >= max\n\n  return index =>\n    [\n      c(up, left),\n      up,\n      c(up, right),\n      left,\n      right,\n      c(down, left),\n      down,\n      c(down, right),\n    ]\n      .map(move => move(fromIndex(index)))\n      .filter(\n        ({ col, row }) =>\n          !outOfBounds(numCols, col) && !outOfBounds(numRows, row)\n      )\n      .map(indexFromCoordinates({ numCols }))\n}\n","export default function random(to, from = 0) {\n  return Math.floor(Math.random() * (to - from)) + from\n}\n","import cellsAround from './cells-around'\nimport randomUntil from '../utils/random-until'\n\nconst emptyCell = {\n  visible: false,\n  isMine: false,\n  minesAround: 0,\n  marked: false,\n}\n\nfunction getRandomMinePositions(range, mines) {\n  const randomizeMine = (forbidden, numMines) => {\n    if (numMines <= 0) return forbidden\n    const newMinePosition = randomUntil(forbidden)(range)\n\n    return randomizeMine([...forbidden, newMinePosition], numMines - 1)\n  }\n\n  return randomizeMine([], mines)\n}\n\nexport default function populate({ numMines, numCols, numRows }) {\n  const cells = Array(numCols * numRows).fill(emptyCell)\n  const getCellsAround = cellsAround({ numCols, numRows })\n\n  const minePositions = getRandomMinePositions(numCols * numRows, numMines)\n\n  const cellsWithMines = cells.map((cell, index) => {\n    if (minePositions.includes(index)) {\n      return { ...cell, isMine: true }\n    }\n    return cell\n  })\n\n  const cellsWithMinesAndNumbers = cellsWithMines.map((cell, index) => ({\n    ...cell,\n    minesAround: getCellsAround(index)\n      .map(cellIndex => cellsWithMines[cellIndex])\n      .filter(cell => cell.isMine).length,\n  }))\n\n  return Array(numRows)\n    .fill(0)\n    .map((_, index) => index * numCols)\n    .map(index => cellsWithMinesAndNumbers.slice(index, index + numCols))\n}\n","import random from './random'\n\nexport default function randomUntil(forbidden) {\n  return (from, to) => {\n    let rand\n\n    do {\n      rand = random(from, to)\n    } while (forbidden.includes(rand))\n\n    return rand\n  }\n}\n","import React from 'react'\n\nconst AppContext = React.createContext(() => {\n  throw new Error('Trying to consume AppContext without wrapping provider.')\n})\n\nexport default AppContext\n","import { useState, useContext, useRef } from 'react'\nimport produce from 'immer'\n\nimport useEffectOnFirstRender from './useEffectOnFirstRender'\nimport populate from '../mines/populate'\nimport cellsAround from '../mines/cells-around'\nimport {\n  coordinatesFromIndex,\n  indexFromCoordinates,\n} from '../mines/coordinates'\n\nimport AppContext from '../context/app'\n\nexport default function useGrid(stats) {\n  const { onBomb, locked } = useContext(AppContext)\n  const [grid, setGrid] = useState([[]])\n  const findCellsAround = cellsAround(stats)\n  const fromIndex = coordinatesFromIndex(stats)\n  const toIndex = indexFromCoordinates(stats)\n\n  useEffectOnFirstRender(() => {\n    setGrid(populate(stats))\n  })\n\n  const setCell = ({ col, row }) => partial =>\n    setGrid(minefield =>\n      produce(minefield, draft => {\n        draft[row][col] = {\n          ...draft[row][col],\n          ...partial,\n        }\n      })\n    )\n\n  const visited = useRef(new Set())\n\n  const selectCell = ({ row, col }) => {\n    const cell = grid[row][col]\n    if (!locked && !cell.marked) {\n      setCell({ row, col })({ visible: true })\n\n      if (cell.isMine) {\n        return onBomb()\n      }\n\n      if (cell.minesAround === 0) {\n        findCellsAround(toIndex({ row, col })).forEach(index => {\n          if (!visited.current.has(index)) {\n            visited.current.add(index)\n            selectCell(fromIndex(index))\n          }\n        })\n      }\n    }\n  }\n\n  const markCell = ({ col, row }) => {\n    if (!locked) {\n      setCell({ col, row })({ marked: !grid[row][col].marked })\n    }\n  }\n\n  return [grid, { selectCell, markCell }]\n}\n","import { useState, useEffect } from 'react'\n\nexport default function useEffectOnFirstRender(callback, dependencies = []) {\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!mounted) {\n      setMounted(true)\n      callback()\n    }\n  }, [...dependencies, mounted, setMounted, callback])\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled/macro'\n\nimport Cell from './cell'\nimport useGrid from '../hooks/useGrid'\n\nconst Row = styled.div`\n  display: flex;\n`\n\nconst Container = styled.div`\n  width: ${({ numCols }) => numCols * 3}em;\n  height: ${({ numRows }) => numRows * 3}em;\n`\n\nexport default function Grid({ numMines, numCols, numRows }) {\n  const [grid, { selectCell, markCell }] = useGrid({\n    numMines,\n    numCols,\n    numRows,\n  })\n\n  const numberOfFlags = grid.reduce(\n    (amount, column) =>\n      amount + column.reduce((flags, cell) => flags + (cell.marked ? 1 : 0), 0),\n    0\n  )\n\n  return (\n    <Container numCols={numCols} numRows={numRows}>\n      {grid.map((row, rowIndex) => (\n        <Row key={rowIndex}>\n          {row.map((cell, colIndex) => (\n            <Cell\n              cell={cell}\n              key={colIndex}\n              selectCell={() => selectCell({ row: rowIndex, col: colIndex })}\n              markCell={() => markCell({ row: rowIndex, col: colIndex })}\n            />\n          ))}\n        </Row>\n      ))}\n      <div>\n        {numberOfFlags} / {numMines}\n      </div>\n    </Container>\n  )\n}\n\nGrid.propTypes = {\n  numMines: PropTypes.number,\n  numCols: PropTypes.number,\n  numRows: PropTypes.number,\n}\n\nGrid.defaultProps = {\n  numMines: 0,\n  numCols: 1,\n  numRows: 1,\n}\n","import React, { useState, useMemo, useCallback } from 'react'\nimport styled from '@emotion/styled/macro'\n\nimport Title from './components/title'\nimport Grid from './components/grid'\nimport AppContext from './context/app'\n\nconst Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 5vh 25vw;\n`\n\nconst Button = styled.button`\n  padding: 0.5em 1em;\n  background-color: blue;\n  color: #fff;\n  border-radius: 5px;\n  cursor: pointer;\n  border: none;\n  font-size: 1em;\n`\n\nfunction App() {\n  const [tries, setTries] = useState(0)\n  const [finished, setFinished] = useState(false)\n\n  const restart = useCallback(() => {\n    setTries(tries => tries + 1)\n    setFinished(false)\n  }, [setTries, setFinished])\n\n  const context = useMemo(\n    () => ({\n      locked: finished,\n      onBomb: () => setFinished(true),\n    }),\n    [setFinished, finished]\n  )\n\n  return (\n    <AppContext.Provider value={context}>\n      <Main>\n        <Title>Minesweeper</Title>\n        <Grid key={tries} numCols={16} numRows={16} numMines={40} />\n        <Button onClick={restart}>Restart</Button>\n      </Main>\n    </AppContext.Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './app'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}