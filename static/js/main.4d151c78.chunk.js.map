{"version":3,"sources":["components/title.js","components/cell.js","mines/cells-around.js","mines/coordinates.js","utils/random.js","mines/populate.js","utils/random-until.js","context/app.js","components/grid.js","hooks/useGrid.js","app.js","index.js"],"names":["Title","Object","styled_base_browser_esm","target","name","styles","Button","_ref","visible","_ref2","children","concat","React","memo","_ref3","fn","cell","selectCell","markCell","selectCellsAround","react_default","a","createElement","onClick","onDoubleClick","onContextMenu","event","preventDefault","marked","isMine","minesAround","getSymbolFor","c","f1","f2","apply","arguments","cellsAround","numCols","numRows","up","pos","objectSpread","row","down","left","col","right","outOfBounds","max","index","position","map","move","filter","indexFromCoordinates","random","to","from","length","undefined","Math","floor","emptyCell","getRandomMinePositions","range","mines","randomizeMine","forbidden","numMines","newMinePosition","rand","includes","randomUntil","toConsumableArray","populate","cells","Array","fill","getCellsAround","minePositions","cellsWithMines","fromIndex","coordinatesFromIndex","toIndex","cellsWithMinesAndNumbers","_","slice","AppContext","createContext","Error","Row","Container","Grid","_useGrid","stats","_useContext","useContext","onBomb","locked","_useState","useState","_useState2","slicedToArray","grid","setGrid","findCellsAround","useEffect","setCell","partial","minefield","immer","draft","visited","useRef","Set","forEach","current","has","add","useGrid","_useGrid2","_useGrid2$","numberOfFlags","reduce","amount","column","flags","rowIndex","key","colIndex","components_cell","defaultProps","Main","App","tries","setTries","_useState3","_useState4","finished","setFinished","restart","useCallback","context","useMemo","app","Provider","value","title","app_Button","ReactDOM","render","src_app","document","getElementById"],"mappings":"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","file":"static/js/main.4d151c78.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro'\n\nconst Title = styled.h1`\n  font-size: 2.5em;\n`\n\nexport default Title\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\n\nfunction getColorFor(number) {\n  const colors = [\n    'blue',\n    'green',\n    'red',\n    'dark-blue',\n    'brown',\n    'cyan',\n    'black',\n    'gray',\n  ]\n\n  return colors[number - 1]\n}\n\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.5em;\n  height: 2em;\n  width: 2em;\n  padding: 0.2em;\n\n  font-family: sans-serif;\n  font-weight: bold;\n  border: none;\n\n  ${({ visible }) =>\n    !visible &&\n    `\n    border: 0.3em outset #686868;\n    border-top-color: #aeaeae;\n  `}\n\n  ${({ children }) =>\n    children !== 'ðŸ’£ ' &&\n    `color: ${getColorFor(children)};`}\n\n  background-color: #b2b2b2;\n\n  cursor: pointer;\n  box-sizing: border-box;\n  user-select: none;\n\n  :active {\n    border: none;\n    padding: 0.481em; /* visual compensation */\n  }\n`\n\nfunction getSymbolFor(cell) {\n  if (cell.marked) return 'ðŸš© '\n  if (!cell.visible) return ''\n  if (cell.isMine) return 'ðŸ’£ '\n\n  return cell.minesAround || ''\n}\n\nfunction preventDefault(fn) {\n  return event => {\n    event.preventDefault()\n    fn()\n  }\n}\n\nfunction Cell({ cell, selectCell, markCell, selectCellsAround }) {\n  return (\n    <Button\n      visible={cell.visible}\n      onClick={selectCell}\n      onDoubleClick={selectCellsAround}\n      onContextMenu={preventDefault(markCell)}\n    >\n      {getSymbolFor(cell)}\n    </Button>\n  )\n}\n\nexport default React.memo(Cell)\n","const c = (f1, f2) => (...params) => f1(f2(...params))\n\nexport default function cellsAround({ numCols, numRows }) {\n  const up = pos => ({ ...pos, row: pos.row - 1 })\n  const down = pos => ({ ...pos, row: pos.row + 1 })\n  const left = pos => ({ ...pos, col: pos.col - 1 })\n  const right = pos => ({ ...pos, col: pos.col + 1 })\n\n  const outOfBounds = (max, index) => index < 0 || index >= max\n\n  return position =>\n    [\n      c(up, left),\n      up,\n      c(up, right),\n      left,\n      right,\n      c(down, left),\n      down,\n      c(down, right),\n    ]\n      .map(move => move(position))\n      .filter(\n        ({ col, row }) =>\n          !outOfBounds(numCols, col) && !outOfBounds(numRows, row)\n      )\n}\n","export function coordinatesFromIndex({ numCols }) {\n  return index => ({\n    col: index % numCols,\n    row: Math.floor(index / numCols),\n  })\n}\n\nexport function indexFromCoordinates({ numCols }) {\n  return ({ col, row }) => row * numCols + col\n}\n","export default function random(to, from = 0) {\n  return Math.floor(Math.random() * (to - from)) + from\n}\n","import cellsAround from './cells-around'\nimport { indexFromCoordinates, coordinatesFromIndex } from './coordinates'\n\nimport randomUntil from '../utils/random-until'\n\nconst emptyCell = {\n  visible: false,\n  isMine: false,\n  minesAround: 0,\n  marked: false,\n}\n\nfunction getRandomMinePositions(range, mines) {\n  const randomizeMine = (forbidden, numMines) => {\n    if (numMines <= 0) return forbidden\n    const newMinePosition = randomUntil(forbidden)(range)\n\n    return randomizeMine([...forbidden, newMinePosition], numMines - 1)\n  }\n\n  return randomizeMine([], mines)\n}\n\nexport default function populate({ numMines, numCols, numRows }) {\n  const cells = Array(numCols * numRows).fill(emptyCell)\n  const getCellsAround = cellsAround({ numCols, numRows })\n\n  const minePositions = getRandomMinePositions(numCols * numRows, numMines)\n\n  const cellsWithMines = cells.map((cell, index) => {\n    if (minePositions.includes(index)) {\n      return { ...cell, isMine: true }\n    }\n    return cell\n  })\n\n  const fromIndex = coordinatesFromIndex({ numCols, numRows })\n  const toIndex = indexFromCoordinates({ numCols, numRows })\n\n  const cellsWithMinesAndNumbers = cellsWithMines.map((cell, index) => ({\n    ...cell,\n    minesAround: getCellsAround(fromIndex(index))\n      .map(position => cellsWithMines[toIndex(position)])\n      .filter(cell => cell.isMine).length,\n  }))\n\n  return Array(numRows)\n    .fill(0)\n    .map((_, index) => index * numCols)\n    .map(index => cellsWithMinesAndNumbers.slice(index, index + numCols))\n}\n","import random from './random'\n\nexport default function randomUntil(forbidden) {\n  return (from, to) => {\n    let rand\n\n    do {\n      rand = random(from, to)\n    } while (forbidden.includes(rand))\n\n    return rand\n  }\n}\n","import React from 'react'\n\nconst AppContext = React.createContext(() => {\n  throw new Error('Trying to consume AppContext without wrapping provider.')\n})\n\nexport default AppContext\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled/macro'\n\nimport Cell from './cell'\nimport useGrid from '../hooks/useGrid'\n\nimport cellsAround from '../mines/cells-around'\n\nconst Row = styled.div`\n  display: flex;\n`\n\nconst Container = styled.div`\n  width: ${({ numCols }) => numCols * 3}em;\n  height: ${({ numRows }) => numRows * 3}em;\n`\n\nexport default function Grid({ numMines, numCols, numRows }) {\n  const [grid, { selectCell, markCell }] = useGrid({\n    numMines,\n    numCols,\n    numRows,\n  })\n\n  const numberOfFlags = grid.reduce(\n    (amount, column) =>\n      amount + column.reduce((flags, cell) => flags + (cell.marked ? 1 : 0), 0),\n    0\n  )\n\n  const findCellsAround = cellsAround({ numCols, numRows })\n\n  return (\n    <Container numCols={numCols} numRows={numRows}>\n      {grid.map((row, rowIndex) => (\n        <Row key={rowIndex}>\n          {row.map((cell, colIndex) => (\n            <Cell\n              cell={cell}\n              key={colIndex}\n              selectCell={() => selectCell({ row: rowIndex, col: colIndex })}\n              selectCellsAround={() =>\n                findCellsAround({ row: rowIndex, col: colIndex }).forEach(\n                  selectCell\n                )\n              }\n              markCell={() => markCell({ row: rowIndex, col: colIndex })}\n            />\n          ))}\n        </Row>\n      ))}\n      <div>\n        {numberOfFlags} / {numMines}\n      </div>\n    </Container>\n  )\n}\n\nGrid.propTypes = {\n  numMines: PropTypes.number,\n  numCols: PropTypes.number,\n  numRows: PropTypes.number,\n}\n\nGrid.defaultProps = {\n  numMines: 0,\n  numCols: 1,\n  numRows: 1,\n}\n","import { useEffect, useState, useContext, useRef } from 'react'\nimport immer from 'immer'\n\nimport populate from '../mines/populate'\nimport cellsAround from '../mines/cells-around'\nimport { indexFromCoordinates } from '../mines/coordinates'\n\nimport AppContext from '../context/app'\n\nexport default function useGrid(stats) {\n  const { numCols, numRows, numMines } = stats\n\n  const { onBomb, locked } = useContext(AppContext)\n  const [grid, setGrid] = useState([[]])\n  const findCellsAround = cellsAround(stats)\n  const toIndex = indexFromCoordinates(stats)\n\n  useEffect(() => {\n    setGrid(populate({ numCols, numRows, numMines }))\n  }, [numCols, numRows, numMines])\n\n  const setCell = ({ col, row }) => partial =>\n    setGrid(minefield =>\n      immer(minefield, draft => {\n        draft[row][col] = {\n          ...draft[row][col],\n          ...partial,\n        }\n      })\n    )\n\n  const visited = useRef(new Set())\n\n  const selectCell = ({ row, col }) => {\n    const cell = grid[row][col]\n    if (!locked && !cell.marked) {\n      setCell({ row, col })({ visible: true })\n\n      if (cell.isMine) {\n        return onBomb()\n      }\n\n      if (cell.minesAround === 0) {\n        findCellsAround({ row, col }).forEach(position => {\n          if (!visited.current.has(toIndex(position))) {\n            visited.current.add(toIndex(position))\n            selectCell(position)\n          }\n        })\n      }\n    }\n  }\n\n  const markCell = ({ col, row }) => {\n    const cell = grid[row][col]\n    if (!locked && !cell.visible) {\n      setCell({ col, row })({ marked: !cell.marked })\n    }\n  }\n\n  return [grid, { selectCell, markCell }]\n}\n","import React, { useState, useMemo, useCallback } from 'react'\nimport styled from '@emotion/styled/macro'\n\nimport Title from './components/title'\nimport Grid from './components/grid'\nimport AppContext from './context/app'\n\nconst Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 5vh 25vw;\n`\n\nconst Button = styled.button`\n  padding: 0.5em 1em;\n  background-color: blue;\n  color: #fff;\n  border-radius: 5px;\n  cursor: pointer;\n  border: none;\n  font-size: 1em;\n`\n\nfunction App() {\n  const [tries, setTries] = useState(0)\n  const [finished, setFinished] = useState(false)\n\n  const restart = useCallback(() => {\n    setTries(tries => tries + 1)\n    setFinished(false)\n  }, [setTries, setFinished])\n\n  const context = useMemo(\n    () => ({\n      locked: finished,\n      onBomb: () => setFinished(true),\n    }),\n    [setFinished, finished]\n  )\n\n  return (\n    <AppContext.Provider value={context}>\n      <Main>\n        <Title>Minesweeper</Title>\n        <Grid key={tries} numCols={16} numRows={16} numMines={40} />\n        <Button onClick={restart}>Restart</Button>\n      </Main>\n    </AppContext.Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './app'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}